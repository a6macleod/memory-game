{"version":3,"sources":["components/Header.js","components/Footer.js","components/Cards.js","components/Directions.js","images/imgZero.jpg","images/imgOne.jpg","images/imgTwo.jpg","images/imgThree.jpg","images/imgFour.jpg","images/imgFive.jpg","images/imgSix.jpg","images/imgSeven.jpg","images/imgEight.jpg","images/imgNine.jpg","images/imgTen.jpg","images/imgEleven.jpg","App.js","index.js"],"names":["Header","props","className","score","currentScore","bestScore","onClick","toggleDirections","Footer","href","Cards","checkIfClicked","cardOrder","src","img","alt","Directions","App","useState","show","showDirections","setShowDirections","setScore","index","Math","random","name","clicked","imgZero","imgOne","imgTwo","imgThree","imgFour","imgFive","imgSix","imgSeven","imgEight","imgNine","imgTen","imgEleven","setCardOrder","useEffect","resortCards","resetClickedCards","slice","forEach","card","sortedCards","sort","a","b","endRound","addPoint","updatedScore","addCurrentAndBestScore","alert","addCurrentScore","item","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7be0c039.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Header = (props) => {\n  return (\n    <div className=\"header\">\n      <h1>Memory!</h1>\n      <div className=\"score-container\">\n        <h4>\n          Score: <span>{props.score.currentScore}</span>\n        </h4>\n        <h4>\n          Best Score: <span>{props.score.bestScore}</span>\n        </h4>\n        <button\n          className=\"directions-button\"\n          onClick={() => props.toggleDirections()}\n        >\n          Directions\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nconst Footer = () => {\n  return (\n    <div className=\"footer\">\n      <p>\n        Created by\n        <a href=\"https://github.com/a6macleod/memory-game\">Andrew MacLeod</a>\n      </p>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\n\nconst Cards = (props) => {\n  return (\n    <div className=\"Cards-section\">\n      <div className=\"cards-container\">\n        <div\n          className=\"card 0\"\n          onClick={() => props.checkIfClicked(props.cardOrder[0])}\n        >\n          <img src={props.cardOrder[0].img} alt=\"gears\" />\n        </div>\n        <div\n          className=\"card 1\"\n          onClick={() => props.checkIfClicked(props.cardOrder[1])}\n        >\n          <img src={props.cardOrder[1].img} alt=\"gears\" />\n        </div>\n        <div\n          className=\"card 2\"\n          onClick={() => props.checkIfClicked(props.cardOrder[2])}\n        >\n          <img src={props.cardOrder[2].img} alt=\"gears\" />\n        </div>\n        <div\n          className=\"card 3\"\n          onClick={() => props.checkIfClicked(props.cardOrder[3])}\n        >\n          <img src={props.cardOrder[3].img} alt=\"gears\" />\n        </div>\n        <div\n          className=\"card 4\"\n          onClick={() => props.checkIfClicked(props.cardOrder[4])}\n        >\n          <img src={props.cardOrder[4].img} alt=\"gears\" />\n        </div>\n        <div\n          className=\"card 5\"\n          onClick={() => props.checkIfClicked(props.cardOrder[5])}\n        >\n          <img src={props.cardOrder[5].img} alt=\"gears\" />\n        </div>\n        <div\n          className=\"card 6\"\n          onClick={() => props.checkIfClicked(props.cardOrder[6])}\n        >\n          <img src={props.cardOrder[6].img} alt=\"gears\" />\n        </div>\n        <div\n          className=\"card 7\"\n          onClick={() => props.checkIfClicked(props.cardOrder[7])}\n        >\n          <img src={props.cardOrder[7].img} alt=\"gears\" />\n        </div>\n        <div\n          className=\"card 8\"\n          onClick={() => props.checkIfClicked(props.cardOrder[8])}\n        >\n          <img src={props.cardOrder[8].img} alt=\"gears\" />\n        </div>\n\n        <div\n          className=\"card 9\"\n          onClick={() => props.checkIfClicked(props.cardOrder[9])}\n        >\n          <img src={props.cardOrder[9].img} alt=\"gears\" />\n        </div>\n        <div\n          className=\"card 10\"\n          onClick={() => props.checkIfClicked(props.cardOrder[10])}\n        >\n          <img src={props.cardOrder[10].img} alt=\"gears\" />\n        </div>\n        <div\n          className=\"card 11\"\n          onClick={() => props.checkIfClicked(props.cardOrder[11])}\n        >\n          <img src={props.cardOrder[11].img} alt=\"gears\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Cards;\n","import React from \"react\";\n\nconst Directions = (props) => {\n  return (\n    <div className=\"directions-container\">\n      <h2>Directions</h2>\n      <div className=\"directions\">\n        <p>\n          Click the images to score a point. Try not to click the same one twice\n          or your score will reset! Click all 12 images in one go and win!\n        </p>\n        <button className=\"ok-button\" onClick={() => props.toggleDirections()}>\n          Play\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Directions;\n","export default __webpack_public_path__ + \"static/media/imgZero.5a766bae.jpg\";","export default __webpack_public_path__ + \"static/media/imgOne.66adbc7e.jpg\";","export default __webpack_public_path__ + \"static/media/imgTwo.ed4b4de6.jpg\";","export default __webpack_public_path__ + \"static/media/imgThree.eab73c36.jpg\";","export default __webpack_public_path__ + \"static/media/imgFour.b813d3c8.jpg\";","export default __webpack_public_path__ + \"static/media/imgFive.079cdf66.jpg\";","export default __webpack_public_path__ + \"static/media/imgSix.6cd3186d.jpg\";","export default __webpack_public_path__ + \"static/media/imgSeven.ce0b465f.jpg\";","export default __webpack_public_path__ + \"static/media/imgEight.b4774a99.jpg\";","export default __webpack_public_path__ + \"static/media/imgNine.524c8d6b.jpg\";","export default __webpack_public_path__ + \"static/media/imgTen.03602e77.jpg\";","export default __webpack_public_path__ + \"static/media/imgEleven.d8571c2d.jpg\";","import React, { useState, useEffect } from \"react\";\n// CSS\n// import \"./css-reset.css\";\nimport \"./App.css\";\n// components\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport Cards from \"./components/Cards\";\nimport Directions from \"./components/Directions\";\n// images\nimport imgZero from \"./images/imgZero.jpg\";\nimport imgOne from \"./images/imgOne.jpg\";\nimport imgTwo from \"./images/imgTwo.jpg\";\nimport imgThree from \"./images/imgThree.jpg\";\nimport imgFour from \"./images/imgFour.jpg\";\nimport imgFive from \"./images/imgFive.jpg\";\nimport imgSix from \"./images/imgSix.jpg\";\nimport imgSeven from \"./images/imgSeven.jpg\";\nimport imgEight from \"./images/imgEight.jpg\";\nimport imgNine from \"./images/imgNine.jpg\";\nimport imgTen from \"./images/imgTen.jpg\";\nimport imgEleven from \"./images/imgEleven.jpg\";\n\nfunction App() {\n  const [showDirections, setShowDirections] = useState({\n    show: true,\n  });\n\n  const [score, setScore] = useState({\n    currentScore: 0,\n    bestScore: 0,\n  });\n\n  const [cardOrder, setCardOrder] = useState([\n    {\n      index: Math.random() * 100,\n      name: \"zero\",\n      clicked: false,\n      img: imgZero,\n    },\n    {\n      index: Math.random() * 100,\n      name: \"one\",\n      clicked: false,\n      img: imgOne,\n    },\n    {\n      index: Math.random() * 100,\n      name: \"two\",\n      clicked: false,\n      img: imgTwo,\n    },\n    {\n      index: Math.random() * 100,\n      name: \"three\",\n      clicked: false,\n      img: imgThree,\n    },\n    {\n      index: Math.random() * 100,\n      name: \"four\",\n      clicked: false,\n      img: imgFour,\n    },\n    {\n      index: Math.random() * 100,\n      name: \"five\",\n      clicked: false,\n      img: imgFive,\n    },\n    {\n      index: Math.random() * 100,\n      name: \"six\",\n      clicked: false,\n      img: imgSix,\n    },\n    {\n      index: Math.random() * 100,\n      name: \"seven\",\n      clicked: false,\n      img: imgSeven,\n    },\n    {\n      index: Math.random() * 100,\n      name: \"eight\",\n      clicked: false,\n      img: imgEight,\n    },\n    {\n      index: Math.random() * 100,\n      name: \"nine\",\n      clicked: false,\n      img: imgNine,\n    },\n    {\n      index: Math.random() * 100,\n      name: \"ten\",\n      clicked: false,\n      img: imgTen,\n    },\n    {\n      index: Math.random() * 100,\n      name: \"eleven\",\n      clicked: false,\n      img: imgEleven,\n    },\n  ]);\n\n  // Shuffles the cards 1x on load\n  useEffect(() => {\n    resortCards();\n  }, []);\n\n  // pop up for directions and best score\n  const toggleDirections = () => {\n    setShowDirections({\n      show: !showDirections.show,\n    });\n  };\n\n  // card functions\n  const checkIfClicked = (item) => {\n    if (item.clicked) {\n      resetClickedCards();\n      endRound();\n    } else {\n      item.clicked = true;\n      addPoint();\n    }\n    resortCards();\n  };\n\n  const resetClickedCards = () => {\n    const resetCards = cardOrder.slice();\n    resetCards.forEach((card) => (card.clicked = false));\n  };\n\n  const resortCards = () => {\n    const sortedCards = cardOrder.slice();\n    sortedCards.forEach((card) => (card.index = Math.random() * 100));\n    sortedCards.sort((a, b) => (a.index > b.index ? 1 : -1));\n    setCardOrder(sortedCards);\n  };\n\n  // score keeping functions\n  const endRound = () => {\n    setScore({\n      ...score,\n      currentScore: 0,\n    });\n  };\n\n  const endGame = () => {\n    resetClickedCards();\n    setScore({\n      bestScore: 0,\n      currentScore: 0,\n    });\n  };\n\n  const addPoint = () => {\n    const updatedScore = score.currentScore + 1;\n    if (updatedScore > score.bestScore) {\n      addCurrentAndBestScore(updatedScore);\n      if (updatedScore === 12) {\n        alert(\"You win!\");\n        endGame();\n      }\n    } else {\n      addCurrentScore(updatedScore);\n    }\n  };\n\n  const addCurrentScore = (updatedScore) => {\n    setScore({\n      ...score,\n      currentScore: updatedScore,\n    });\n  };\n\n  const addCurrentAndBestScore = (updatedScore) => {\n    setScore({\n      ...score,\n      currentScore: updatedScore,\n      bestScore: updatedScore,\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <Header score={score} toggleDirections={toggleDirections} />\n        {showDirections.show ? (\n          <Directions toggleDirections={toggleDirections} />\n        ) : (\n          <Cards\n            addPoint={addPoint}\n            endRound={endRound}\n            cardOrder={cardOrder}\n            checkIfClicked={checkIfClicked}\n            resortCards={resortCards}\n          />\n        )}\n        <Footer />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}