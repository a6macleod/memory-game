{"version":3,"sources":["components/Header.js","components/Footer.js","components/Gameboard.js","components/Directions.js","utils/imagesImporter.js","images/imgZero.jpg","images/imgOne.jpg","images/imgTwo.jpg","images/imgThree.jpg","images/imgFour.jpg","images/imgFive.jpg","images/imgSix.jpg","images/imgSeven.jpg","images/imgEight.jpg","images/imgNine.jpg","images/imgTen.jpg","images/imgEleven.jpg","utils/cardHandlers.js","App.js","index.js"],"names":["Header","score","toggleDirections","className","currentScore","bestScore","onClick","Footer","href","Gameboard","allCards","checkIfClicked","map","card","src","img","alt","index","Directions","allImages","cardHandlers","shuffleCards","cards","forEach","Math","random","sort","a","b","resetClickedCards","clicked","cardBuilder","newCards","image","push","App","useState","show","showDirections","setShowDirections","setScore","setAllCards","addPoint","newScore","updateScore","alert","checkIfGameOver","endRound","useEffect","markCardAsClicked","clickCard","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6e4fb61d.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Header = ({ score, toggleDirections }) => {\n  return (\n    <div className=\"header\">\n      <h1>Memory!</h1>\n      <div className=\"score-container\">\n        <h4>\n          Score: <span>{score.currentScore}</span>\n        </h4>\n        <h4>\n          Best Score: <span>{score.bestScore}</span>\n        </h4>\n        <button\n          className=\"directions-button\"\n          onClick={() => toggleDirections()}\n        >\n          Directions\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nconst Footer = () => {\n  return (\n    <div className=\"footer\">\n      <p>\n        Created by\n        <a href=\"https://github.com/a6macleod/memory-game\">Andrew MacLeod</a>\n      </p>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\n\nconst Gameboard = ({ allCards, checkIfClicked }) => {\n  return (\n    <div className=\"Cards-section\">\n      <div className=\"cards-container\">\n        {allCards.map((card) =>\n          <div\n            className=\"card\"\n            key={card.index}\n            onClick={() => checkIfClicked(card)}\n          >\n            <img src={card.img} alt=\"gears\" />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Gameboard;\n","import React from \"react\";\n\nconst Directions = ({ toggleDirections }) => {\n  return (\n    <div className=\"directions-container\">\n      <h2>Directions</h2>\n      <div className=\"directions\">\n        <p>\n          Click the images to score a point! Click all 12 images only once and win!\n        </p>\n        <p>\n          Try not to click the same image twice or your score will reset!\n        </p>\n        <button className=\"ok-button directions-button\" onClick={() => toggleDirections()}>\n          OK!\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Directions;\n","import img0 from \"../images/imgZero.jpg\";\nimport img1 from \"../images/imgOne.jpg\";\nimport img2 from \"../images/imgTwo.jpg\";\nimport img3 from \"../images/imgThree.jpg\";\nimport img4 from \"../images/imgFour.jpg\";\nimport img5 from \"../images/imgFive.jpg\";\nimport img6 from \"../images/imgSix.jpg\";\nimport img7 from \"../images/imgSeven.jpg\";\nimport img8 from \"../images/imgEight.jpg\";\nimport img9 from \"../images/imgNine.jpg\";\nimport img10 from \"../images/imgTen.jpg\";\nimport img11 from \"../images/imgEleven.jpg\";\n\nconst allImages = [img0, img1, img2, img3, img4, img5,img6, img7, img8, img9, img10, img11];\n\nexport default allImages;","export default __webpack_public_path__ + \"static/media/imgZero.5a766bae.jpg\";","export default __webpack_public_path__ + \"static/media/imgOne.66adbc7e.jpg\";","export default __webpack_public_path__ + \"static/media/imgTwo.ed4b4de6.jpg\";","export default __webpack_public_path__ + \"static/media/imgThree.eab73c36.jpg\";","export default __webpack_public_path__ + \"static/media/imgFour.b813d3c8.jpg\";","export default __webpack_public_path__ + \"static/media/imgFive.079cdf66.jpg\";","export default __webpack_public_path__ + \"static/media/imgSix.6cd3186d.jpg\";","export default __webpack_public_path__ + \"static/media/imgSeven.ce0b465f.jpg\";","export default __webpack_public_path__ + \"static/media/imgEight.b4774a99.jpg\";","export default __webpack_public_path__ + \"static/media/imgNine.524c8d6b.jpg\";","export default __webpack_public_path__ + \"static/media/imgTen.03602e77.jpg\";","export default __webpack_public_path__ + \"static/media/imgEleven.d8571c2d.jpg\";","import allImages from './imagesImporter'\n\nconst cardHandlers = {\n  shuffleCards: (cards) => {\n    cards.forEach((card) => (card.index = Math.random() * 100));\n    return cards.sort((a, b) => (a.index > b.index ? 1 : -1));\n  },\n\n  resetClickedCards: (cards) => {\n    return cards.forEach((card) => (card.clicked = false));\n  },\n\n  cardBuilder: () => {\n    let newCards = [];\n    allImages.forEach(image => {\n      newCards.push(\n        {\n          index: Math.random() * 100,\n          clicked: false,\n          img: image,\n        }\n      )}\n    );\n    return newCards\n  }\n}\n\nexport default cardHandlers;","import React, { useState, useEffect } from \"react\";\n\nimport \"./App.css\";\n\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport Gameboard from \"./components/Gameboard\";\nimport Directions from \"./components/Directions\";\n\nimport cardHandlers from \"./utils/cardHandlers\";\n\nfunction App() {\n  const [showDirections, setShowDirections] = useState({\n    show: false,\n  });\n\n  const [score, setScore] = useState({\n    currentScore: 0,\n    bestScore: 0,\n  });\n\n  const [allCards, setAllCards] = useState(cardHandlers.cardBuilder);\n\n  // Shuffle the cards on page load\n  useEffect(() => {\n    setAllCards(cardHandlers.shuffleCards(allCards));\n  }, [allCards]);\n\n  function checkIfClicked(card) {\n    if (!card.clicked) {\n      clickCard(card);\n    } else {\n      cardWasAlreadyClicked();\n    }\n    setAllCards(cardHandlers.shuffleCards(allCards));\n  };\n\n  function clickCard(card) {\n    markCardAsClicked(card);\n    addPoint();\n  }\n\n  function markCardAsClicked(card) {\n    setAllCards(...allCards, card.clicked = true);\n  }\n\n  function cardWasAlreadyClicked() {\n    setAllCards(cardHandlers.resetClickedCards(allCards));\n    endRound();\n  }\n\n  function addPoint() {\n    const newScore = score.currentScore + 1;\n    updateScore(newScore);\n    checkIfGameOver(newScore);\n  };\n\n  function updateScore(newScore) {\n    setScore({\n      ...score,\n      currentScore: newScore,\n      bestScore: score.bestScore < newScore ? newScore : score.bestScore,\n    });\n  };\n\n  function endRound() {\n    setScore({\n      ...score,\n      currentScore: 0,\n    });\n  };\n\n  function checkIfGameOver(newScore) {\n    if (newScore >= 12) {\n      alert(\"You win!\");\n      resetGame();\n    }\n  };\n\n  function resetGame() {\n    setScore({\n      bestScore: 0,\n      currentScore: 0,\n    });\n  };\n\n  function toggleDirections() {\n    setShowDirections({\n      show: !showDirections.show,\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <Header score={score} toggleDirections={toggleDirections} />\n        {showDirections.show ? (\n          <Directions toggleDirections={toggleDirections} />\n        ) : (\n          <Gameboard\n            addPoint={addPoint}\n            endRound={endRound}\n            allCards={allCards}\n            checkIfClicked={checkIfClicked}\n          />\n        )}\n        <Footer />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}